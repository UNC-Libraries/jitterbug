version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-zts-node-browsers-legacy
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: jitterbug_testing

    working_directory: ~/jitterbug

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Install PHP & other exts
          command: |
            sudo apt-get update -y
            sudo docker-php-ext-install zip
            sudo docker-php-ext-install pdo_mysql
            sudo apt-get install -y default-mysql-client
            sudo apt-get install libldap2-dev -y
            sudo rm -rf /var/lib/apt/lists/*
            sudo docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/
            sudo docker-php-ext-install ldap

      - run: sudo composer self-update --stable
      - run:
          name: Copy Circle CI version of .env.testing
          command: cp .env.testing.circleci .env.testing
      - run:
          name: Install Java
          command: |
            cd /
            sudo apt-get update -y
            sudo apt-get install default-jdk -y

      - run:
          name: Install Solr
          command: |
            cd ~
            sudo wget --no-verbose https://archive.apache.org/dist/lucene/solr/8.11.1/solr-8.11.1.tgz
            sudo tar xzf solr-8.11.1.tgz solr-8.11.1/bin/install_solr_service.sh --strip-components=2
            sudo ./install_solr_service.sh solr-8.11.1.tgz -n

      - run:
          name: Get and hook up connector file
          command: |
            cd ~/jitterbug
            sudo wget --no-verbose -nc http://www.mirrorservice.org/sites/ftp.mysql.com/Downloads/Connector-J/mysql-connector-java-8.0.28.zip
            sudo unzip -n mysql-connector-java-8.0.28.zip
            cd /
            sudo cp ~/jitterbug/mysql-connector-java-8.0.28/mysql-connector-java-8.0.28.jar /opt/solr/contrib/dataimporthandler-extras/lib/.

      - run:
          name: Change solr home directory
          command: |
            sudo sed -i.bak 's|SOLR_HOME="/var/solr/data"|SOLR_HOME="/opt/solr/server/solr"|' /etc/default/solr.in.sh

      - run:
          name: Configure Solr cores and start Solr
          command: |
            cd /opt/solr
            sudo chown -R circleci .
            sudo chgrp -R circleci .
            sudo chmod -R g+w .
            cd server/solr
            mkdir jitterbug-items
            mkdir jitterbug-instances
            mkdir jitterbug-transfers
            cd jitterbug-items
            cat ~/jitterbug/dev_files/jitterbug-items.core.properties.example > core.properties
            ln -s ~/jitterbug/solrconfig/jitterbug-items/conf conf
            cd ..
            cd jitterbug-instances
            cat ~/jitterbug/dev_files/jitterbug-instances.core.properties.example > core.properties
            ln -s ~/jitterbug/solrconfig/jitterbug-instances/conf conf
            cd ..
            cd jitterbug-transfers
            cat ~/jitterbug/dev_files/jitterbug-transfers.core.properties.example > core.properties
            ln -s ~/jitterbug/solrconfig/jitterbug-transfers/conf conf
            cd /opt/solr
            bin/solr start
            cd ~/jitterbug

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Migrate DB
          command: |
            php artisan config:cache --env=testing
            php artisan migrate --env=testing --force
      - run:
          name: Wait for Solr
          command: dockerize -wait tcp://127.0.0.1:8983 -timeout 120s
      - run:
          name: Run Tests
          command: ./vendor/bin/phpunit

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build